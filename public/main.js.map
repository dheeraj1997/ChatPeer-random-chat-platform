{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/chatroom/chatroom.component.css","webpack:///./src/app/chatroom/chatroom.component.html","webpack:///./src/app/chatroom/chatroom.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/shared/chat.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/show-profile/show-profile.component.css","webpack:///./src/app/show-profile/show-profile.component.html","webpack:///./src/app/show-profile/show-profile.component.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/app/user/sign-in/sign-in.component.css","webpack:///./src/app/user/sign-in/sign-in.component.html","webpack:///./src/app/user/sign-in/sign-in.component.ts","webpack:///./src/app/user/sign-up/sign-up.component.css","webpack:///./src/app/user/sign-up/sign-up.component.html","webpack:///./src/app/user/sign-up/sign-up.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n}\r\n","// built-in\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// components\r\nimport { AppComponent } from './app.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\n//routes\r\nimport { appRoutes } from './routes';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { UserService } from './shared/user.service';\r\nimport { ChatService} from \"./shared/chat.service\";\r\n//other\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { ShowProfileComponent } from './show-profile/show-profile.component';\r\nimport { ChatroomComponent } from './chatroom/chatroom.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    SignUpComponent,\r\n    UserProfileComponent,\r\n    SignInComponent,\r\n    ShowProfileComponent,\r\n    ChatroomComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes,{useHash:true}),\r\n    HttpClientModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  },AuthGuard,UserService,ChatService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from \"../shared/user.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private userService : UserService,private router : Router){}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n      if (!this.userService.isLoggedIn()) {\r\n        this.router.navigateByUrl('/login');\r\n        this.userService.deleteToken();\r\n        return false;\r\n      }\r\n    return true;\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { UserService } from \"../shared/user.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private userService : UserService,private router : Router){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n        if (req.headers.get('noauth'))\r\n            return next.handle(req.clone());\r\n        else {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + this.userService.getToken())\r\n            });\r\n            return next.handle(clonedreq).pipe(\r\n                tap(\r\n                    event => { },\r\n                    err => {\r\n                        if (err.error.auth == false) {\r\n                            this.router.navigateByUrl('/login');\r\n                        }\r\n                    })\r\n            );\r\n        }\r\n    }\r\n}","module.exports = \".chat\\r\\n{\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.chat li\\r\\n{\\r\\n  margin-bottom: 10px;\\r\\n  padding-bottom: 5px;\\r\\n  border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.chat li.left .chat-body\\r\\n{\\r\\n  margin-left: 60px;\\r\\n}\\r\\n\\r\\n.chat li.right .chat-body\\r\\n{\\r\\n  margin-right: 60px;\\r\\n}\\r\\n\\r\\n.chat li .chat-body p\\r\\n{\\r\\n  margin: 0;\\r\\n  color: #777777;\\r\\n}\\r\\n\\r\\n.panel .slidedown .glyphicon, .chat .glyphicon\\r\\n{\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\n.panel-body\\r\\n{\\r\\n  overflow-y: scroll;\\r\\n  height: 250px;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-track\\r\\n{\\r\\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\r\\n  background-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar\\r\\n{\\r\\n  width: 12px;\\r\\n  background-color: #F5F5F5;\\r\\n}\\r\\n\\r\\n::-webkit-scrollbar-thumb\\r\\n{\\r\\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\r\\n  background-color: #555;\\r\\n}\\r\\n\\r\\n#joinDiv{\\r\\n  margin-top: 4vw;\\r\\n  display: inline-block;\\r\\n  width: 500px;\\r\\n}\\r\\n\\r\\n.width{\\r\\n  width: 75%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row text-center \\\">\\r\\n    <div class=\\\"col-md-3\\\"></div>\\r\\n    <div class=\\\"col-md-6\\\" style=\\\"margin-top: 5%;\\\">\\r\\n      <div class=\\\"panel panel-primary\\\" >\\r\\n        <!--*ngIf=\\\"joinned; else joinroom\\\"-->\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-comment\\\"></span> ChatPeer\\r\\n          <div class=\\\"btn-group pull-right\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" (click)=\\\"logout()\\\">\\r\\n              Logout\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div #scrollMe class=\\\"panel-body\\\">\\r\\n          <ul class=\\\"chat\\\">\\r\\n            <li *ngFor=\\\"let c of chats\\\">\\r\\n              <div class=\\\"left clearfix\\\" *ngIf=\\\"c.nickname===msgData.nickname; else rightchat\\\">\\r\\n                            <span class=\\\"chat-img pull-left\\\">\\r\\n                              <img src=\\\"http://placehold.it/50/55C1E7/fff&text=ME\\\" alt=\\\"User Avatar\\\" class=\\\"img-circle\\\" />\\r\\n                            </span>\\r\\n                <div class=\\\"chat-body clearfix\\\">\\r\\n                  <div class=\\\"header\\\">\\r\\n                    <strong class=\\\"primary-font\\\">{{ c.nickname }}</strong> <small class=\\\"pull-right text-muted\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-time\\\"></span>{{ c.updated_at | date: 'medium' }}</small>\\r\\n                  </div>\\r\\n                  <p>{{ c.message }}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n              <ng-template #rightchat>\\r\\n                <div class=\\\"right clearfix\\\">\\r\\n                              <span class=\\\"chat-img pull-right\\\">\\r\\n                                <img src=\\\"http://placehold.it/50/FA6F57/fff&text=U\\\" alt=\\\"User Avatar\\\" class=\\\"img-circle\\\" />\\r\\n                              </span>\\r\\n                  <div class=\\\"chat-body clearfix\\\">\\r\\n                    <div class=\\\"header\\\">\\r\\n                      <small class=\\\" text-muted\\\"><span class=\\\"glyphicon glyphicon-time\\\"></span>{{ c.updated_at | date: 'medium' }}</small>\\r\\n                      <strong class=\\\"pull-right primary-font\\\">{{ c.nickname }}</strong>\\r\\n                    </div>\\r\\n                    <p>{{ c.message }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"panel-footer\\\">\\r\\n          <form (ngSubmit)=\\\"sendMessage()\\\" #msgForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n              <input type=\\\"hidden\\\" [(ngModel)]=\\\"msgData.room\\\" name=\\\"room\\\" />\\r\\n              <input type=\\\"hidden\\\" [(ngModel)]=\\\"msgData.nickname\\\" name=\\\"nickname\\\" />\\r\\n              <input id=\\\"btn-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"msgData.message\\\" name=\\\"message\\\" class=\\\"form-control input-sm\\\" placeholder=\\\"Type your message here...\\\" required=\\\"\\\" />\\r\\n              <span class=\\\"input-group-btn\\\">\\r\\n                            <button class=\\\"btn btn-warning btn-sm\\\" id=\\\"btn-chat\\\" [disabled]=\\\"!msgForm.form.valid\\\">\\r\\n                                Send</button>\\r\\n                        </span>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!--<ng-template #joinroom>-->\\r\\n        <!--<div class=\\\"panel panel-primary\\\" id=\\\"joinDiv\\\">-->\\r\\n          <!--<div class=\\\"panel-body\\\">-->\\r\\n            <!--<h1>Enter Nickname</h1>-->\\r\\n            <!--<form (ngSubmit)=\\\"joinRoom()\\\" #joinForm=\\\"ngForm\\\">-->\\r\\n              <!--<div class=\\\"form-group\\\">-->\\r\\n                <!--<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newUser.nickname\\\" name=\\\"nickname\\\" placeholder=\\\"Nickname\\\" required=\\\"\\\" />-->\\r\\n              <!--</div>-->\\r\\n              <!--<div class=\\\"form-group\\\">-->\\r\\n                <!--<select class=\\\"form-control\\\" [(ngModel)]=\\\"newUser.room\\\" name=\\\"room\\\" required=\\\"\\\">-->\\r\\n                  <!--&lt;!&ndash;<option>Select Room</option>&ndash;&gt;-->\\r\\n                  <!--<option value=\\\"Javascript\\\">Javascript</option>-->\\r\\n                  <!--<option value=\\\"Java\\\">Java</option>-->\\r\\n                  <!--<option value=\\\"Python\\\">Python</option>-->\\r\\n                <!--</select>-->\\r\\n              <!--</div>-->\\r\\n              <!--<div class=\\\"form-group\\\">-->\\r\\n                <!--<button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!joinForm.form.valid\\\">Start Chat</button>-->\\r\\n              <!--</div>-->\\r\\n            <!--</form>-->\\r\\n          <!--</div>-->\\r\\n        <!--</div>-->\\r\\n      <!--</ng-template>-->\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewChecked, ElementRef, ViewChild } from '@angular/core';\nimport { ChatService} from '../shared/chat.service';\nimport * as io from \"socket.io-client\";\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-chatroom',\n  templateUrl: './chatroom.component.html',\n  styleUrls: ['./chatroom.component.css']\n})\nexport class ChatroomComponent implements OnInit,AfterViewChecked {\n\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\n\n  chats: any;\n  joinned: boolean = false;\n  newUser = { nickname: '', room: '' };\n  msgData = { room: 'Javascript', nickname: '', message: '' };\n  socket = io('http://localhost:3000');\n\n  constructor(private chatService: ChatService,private router: Router) {}\n\n  ngOnInit() {\n    // console.log(\"Chatroom onInit \");\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user!==null) {\n      this.getChatByRoom(user.room);\n      this.msgData = { room: user.room, nickname: user.nickname, message: '' }\n      this.joinned = true;\n      this.scrollToBottom();\n    }\n    this.socket.on('new-message', function (data) {\n      console.log(\"new-message \",data);\n      if(data.message.room === JSON.parse(localStorage.getItem(\"user\")).room) {\n        this.chats.push(data.message);\n        this.msgData = { room: user.room, nickname: user.nickname, message: '' }\n        this.scrollToBottom();\n      }\n    }.bind(this));\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(): void {\n    try {\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n    } catch(err) { }\n  }\n\n  getChatByRoom(room) {\n    this.chatService.getChatByRoom(room).then((res) => {\n      this.chats = res;\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  joinRoom() {\n    var date = new Date();\n    localStorage.setItem(\"user\", JSON.stringify(this.newUser));\n    this.getChatByRoom(this.newUser.room);\n    this.msgData = { room: this.newUser.room, nickname: this.newUser.nickname, message: '' };\n    this.joinned = true;\n    this.socket.emit('save-message', { room: this.newUser.room, nickname: this.newUser.nickname, message: 'Join this room', updated_at: date });\n  }\n\n  sendMessage() {\n    this.chatService.saveChat(this.msgData).then((result) => {\n      this.socket.emit('save-message', result);\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  logout() {\n    var date = new Date();\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n    this.socket.emit('save-message', { room: user.room, nickname: user.nickname, message: 'Left this room', updated_at: date });\n    localStorage.removeItem(\"user\");\n    this.joinned = false;\n    this.router.navigate(['/show-profile']);\n  }\n\n}\n","import { Routes } from '@angular/router';\r\nimport { UserComponent } from './user/user.component';\r\nimport { SignUpComponent } from './user/sign-up/sign-up.component';\r\nimport { SignInComponent } from './user/sign-in/sign-in.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport {ShowProfileComponent} from \"./show-profile/show-profile.component\";\r\nimport {ChatroomComponent} from \"./chatroom/chatroom.component\";\r\n\r\nexport const appRoutes: Routes = [\r\n    {\r\n        path: 'signup', component: UserComponent,\r\n        children: [{ path: '', component: SignUpComponent }]\r\n    },\r\n    {\r\n        path: 'login', component: UserComponent,\r\n        children: [{ path: '', component: SignInComponent }]\r\n    },\r\n    {\r\n        path: 'userprofile', component: UserProfileComponent,canActivate:[AuthGuard]\r\n    },\r\n    {\r\n        path: 'show-profile', component: ShowProfileComponent,canActivate:[AuthGuard]\r\n    },\r\n    {\r\n      path: 'chatroom', component: ChatroomComponent, canActivate:[AuthGuard]\r\n    },\r\n    {\r\n        path: '', redirectTo: '/login', pathMatch: 'full'\r\n    }\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n// import { Headers } from '@angular/http';\n// import { map } from 'rxjs/operators';\n\nimport 'rxjs/add/operator/map';\nimport {ImportMetadata} from \"@angular/compiler-cli/src/metadata/evaluator\";\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class ChatService {\n\n  constructor(private http: HttpClient) { }\n\n  getChatByRoom(room) {\n    return new Promise((resolve, reject) => {\n      this.http.get(environment.apiBaseUrl+'/chat/' + room)\n        .map(res => res)\n        .subscribe(res => {\n          resolve(res);\n        }, (err) => {\n          reject(err);\n        });\n    });\n  }\n\n  saveChat(data) {\n    return new Promise((resolve, reject) => {\n      this.http.post(environment.apiBaseUrl+'/chat', data)\n        .map(res => res)\n        .subscribe(res => {\n          resolve(res);\n        }, (err) => {\n          reject(err);\n        });\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  selectedUser: User = {\r\n    fullName: '',\r\n    age: '',\r\n    locality: '',\r\n    interest: [''],\r\n    email: '',\r\n    password: '',\r\n    status: false\r\n  };\r\n\r\n  noAuthHeader = { headers: new HttpHeaders({ 'NoAuth': 'True' }) };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //HttpMethods\r\n\r\n  postUser(user: User){\r\n    // user.interest = user.interest.split(',');\r\n    // user.status  = false;\r\n    console.log(\"postUser \",user);\r\n    return this.http.post(environment.apiBaseUrl+'/register',user,this.noAuthHeader);\r\n  }\r\n\r\n  login(authCredentials) {\r\n    return this.http.post(environment.apiBaseUrl + '/authenticate', authCredentials,this.noAuthHeader);\r\n  }\r\n\r\n  logout() {\r\n    const id = localStorage.getItem('_id');\r\n    console.log(\"api accessed \",id);\r\n    return this.http.get(environment.apiBaseUrl + '/logout/'+id);\r\n\r\n  }\r\n\r\n  getUserProfile() {\r\n    return this.http.get(environment.apiBaseUrl + '/userProfile');\r\n  }\r\n\r\n  getOthersProfile() {\r\n    const id = localStorage.getItem('_id');\r\n    return this.http.get(environment.apiBaseUrl + '/suggestProfile/'+id);\r\n  }\r\n\r\n\r\n  //Helper Methods\r\n\r\n  setToken(token: string) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  deleteToken() {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  getUserPayload() {\r\n    var token = this.getToken();\r\n    if (token) {\r\n      var userPayload = atob(token.split('.')[1]);\r\n      return JSON.parse(userPayload);\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n\r\n  isLoggedIn() {\r\n    var userPayload = this.getUserPayload();\r\n    if (userPayload)\r\n      return userPayload.exp > Date.now() / 1000;\r\n    else\r\n      return false;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div id=\\\"formContent\\\" >\\n    <!--<div>-->\\n      <!--<img src=\\\"assets/img/user-avatar.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" />-->\\n    <!--</div>-->\\n\\n    <table  class=\\\"table-fill\\\" *ngIf=\\\"userDetails\\\">\\n\\n      <thead>\\n\\n      <tr>\\n        <!--<th><img style=\\\"display:block;\\\" width=\\\"100%\\\" height=\\\"auto\\\"   src=\\\"assets/img/user-avatar.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" /></th>-->\\n        <th colspan=\\\"2\\\" class=\\\"text-center\\\">User Profile </th>\\n      </tr>\\n      <!--<tr><th><img src=\\\"assets/img/user-avatar.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" /></th></tr>-->\\n      </thead>\\n\\n      <tbody>\\n\\n      <tr>\\n        <td>Name</td>\\n        <td>{{userDetails.fullName}}</td>\\n      </tr>\\n\\n      <tr>\\n        <td>Age</td>\\n        <td>{{userDetails.age}}</td>\\n      </tr>\\n      <tr>\\n        <td>Locality</td>\\n        <td>{{userDetails.locality}}</td>\\n      </tr>\\n      <tr>\\n        <td>Interest</td>\\n        <td>{{userDetails.interest}}</td>\\n      </tr>\\n      <tr>\\n        <td colspan=\\\"\\\" class=\\\"text-center\\\">\\n          <input type=\\\"button\\\" (click)=\\\"joinRoom()\\\" value=\\\"Chat\\\" />\\n          <input type=\\\"button\\\" (click)=\\\"ifProfile()\\\" value=\\\"My Profile\\\"/>\\n        </td>\\n        <td>\\n          <input type=\\\"button\\\" (click)=\\\"ifReject()\\\" value=\\\"Next\\\" />\\n          <input type=\\\"button\\\" (click)=\\\"onLogout()\\\" value=\\\"Logout\\\"/>\\n        </td>\\n      </tr>\\n    </table>\\n\\n    <table *ngIf=\\\"!userDetails\\\">\\n\\n    <thead>\\n    <tr>\\n      <!--<th><img style=\\\"display:block;\\\" width=\\\"100%\\\" height=\\\"auto\\\"   src=\\\"assets/img/user-avatar.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" /></th>-->\\n      <th colspan=\\\"2\\\" class=\\\"text-center\\\">No Users Online</th>\\n    </tr>\\n    <!--<tr><th><img src=\\\"assets/img/user-avatar.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" /></th></tr>-->\\n    </thead>\\n    <tbody >\\n    <tr>\\n      <td colspan=\\\"2\\\" class=\\\"text-center\\\">Please refresh the browser or come back later!!</td>\\n      <!--<alert>No Users Online</alert>-->\\n    </tr>\\n    <tr>\\n      <td><input type=\\\"button\\\" (click)=\\\"ifProfile()\\\" value=\\\"My Profile\\\"/></td>\\n      <td><input type=\\\"button\\\" (click)=\\\"onLogout()\\\" value=\\\"Logout\\\"/></td>\\n    </tr>\\n    </tbody>\\n    </table>\\n\\n    <!-- Error message -->\\n    <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\n      {{serverErrorMessages}}\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../shared/user.service';\nimport {ChatService} from \"../shared/chat.service\";\nimport { Router } from \"@angular/router\";\nimport * as io from \"socket.io-client\";\n\n@Component({\n  selector: 'app-show-profile',\n  templateUrl: './show-profile.component.html',\n  styleUrls: ['./show-profile.component.css']\n})\nexport class ShowProfileComponent implements OnInit {\n\n  count = 0;\n  userDetails;\n  loggedUser;\n  suggested;\n  chats: any;\n  joinned: boolean = false;\n  newUser = { nickname: '', room: '' };\n  msgData = { room: '', nickname: '', message: '' };\n  socket = io('http://localhost:3000');\n\n\n  constructor(private userService: UserService, private router: Router, private chatService: ChatService) { }\n\n  ngOnInit() {\n    this.userService.getUserProfile().subscribe(\n      res => {\n        localStorage.setItem('_id', res['user']._id);\n        this.loggedUser = res['user'];\n        this.userService.getOthersProfile().subscribe(\n          res => {\n            console.log(\"showing recieved profile \",res);\n            this.userDetails = res[0];\n            this.suggested = res;\n          },\n          err => {\n            console.log(err);\n          }\n        );\n      },\n      err => {\n        console.log(err);\n      }\n    );\n    console.log(\"constructor was called.\");\n  }\n\n  onLogout(){\n    console.log('onLogout clicked');\n    this.userService.logout().subscribe(res => {\n      console.log('success ',res);\n    }, err => {\n      console.log('error logging out ',err);\n    });\n    this.userService.deleteToken();\n    this.router.navigate(['/login']);\n  }\n  ifProfile(){\n    this.router.navigate(['/userprofile']);\n  }\n  // ifAccept(){\n  //   this.router.navigate(['/chatroom']);\n  // }\n\n  ifReject(){\n    if(this.count<this.suggested.length) {\n      this.count = this.count + 1;\n      this.userDetails = this.suggested[this.count];\n    }\n    else this.userDetails = null;\n  }\n\n  getChatByRoom(room) {\n    this.chatService.getChatByRoom(room).then((res) => {\n      this.chats = res;\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n\n  joinRoom() {\n    var date = new Date();\n    const id = localStorage.getItem('_id');\n    let room = (id < this.userDetails._id) ? (this.userDetails._id + id ) : (id + this.userDetails._id);\n    this.newUser.nickname = this.loggedUser.fullName;\n    this.newUser.room = room;\n    localStorage.setItem(\"user\", JSON.stringify(this.newUser));\n    this.getChatByRoom(this.newUser.room);\n    this.msgData = { room: this.newUser.room, nickname: this.newUser.nickname, message: '' };\n    this.joinned = true;\n    this.socket.emit('save-message', { room: this.newUser.room, nickname: this.newUser.nickname, message: 'Join this room', updated_at: date });\n    this.router.navigate(['/chatroom']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table *ngIf=\\\"userDetails\\\" class=\\\"table-fill\\\">\\r\\n  <thead>\\r\\n      <tr>\\r\\n          <th colspan=\\\"2\\\" class=\\\"text-center\\\">User Profile</th>\\r\\n      </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n      <tr>\\r\\n          <td>First Name</td>\\r\\n          <td>{{userDetails.fullName.split(' ')[0]}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td>Last Name</td>\\r\\n          <td>{{userDetails.fullName.split(' ')[1]}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td>Age</td>\\r\\n          <td>{{userDetails.age}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td>Locality</td>\\r\\n          <td>{{userDetails.locality}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td>Interest</td>\\r\\n          <td>{{userDetails.interest}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td>Email</td>\\r\\n          <td>{{userDetails.email}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n          <td colspan=\\\"2\\\" class=\\\"text-center\\\">\\r\\n              <input type=\\\"button\\\" (click)=\\\"onLogout()\\\" value=\\\"Logout\\\" />\\r\\n          </td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n  userDetails;\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUserProfile().subscribe(\r\n      res => {\r\n        this.userDetails = res['user'];\r\n        // console.log(res.user._id);\r\n        localStorage.setItem('_id', res['user']._id);\r\n        // this.userDetails.interest = JSON.parse(this.userDetails.interest)\r\n      },\r\n      err => {\r\n        console.log(err);\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  onLogout(){\r\n    this.userService.deleteToken();\r\n    this.userService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n    <img src=\\\"assets/img/user-avatar.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" />\\r\\n  </div>\\r\\n  <form #signInForm=\\\"ngForm\\\" (ngSubmit)=\\\"signInForm.valid && onSubmit(signInForm)\\\">\\r\\n    <input type=\\\"text\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"model.email\\\" placeholder=\\\"Email\\\" [pattern]=\\\"emailRegex\\\" required\\r\\n      [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !email.valid }\\\">\\r\\n    <div *ngIf=\\\"signInForm.submitted && email.errors?.pattern\\\">\\r\\n      <label class=\\\"validation-message\\\">Invalid email address.</label>\\r\\n    </div>\\r\\n    <input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" placeholder=\\\"Password\\\" required minlength=\\\"4\\\"\\r\\n      [ngClass]=\\\"{'invalid-textbox' :signInForm.submitted && !password.valid }\\\">\\r\\n    <div *ngIf=\\\"signInForm.submitted && password.errors?.minlength\\\">\\r\\n      <label class=\\\"validation-message\\\">Minimum 4 characters.</label>\\r\\n    </div>\\r\\n    <input type=\\\"submit\\\" value=\\\"Sign In\\\">\\r\\n  </form>\\r\\n  <!-- Error message -->\\r\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n    {{serverErrorMessages}}\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { UserService } from '../../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  constructor(private userService: UserService,private router : Router) { }\r\n\r\n  model ={\r\n    email :'',\r\n    password:''\r\n  };\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  serverErrorMessages: string;\r\n  ngOnInit() {\r\n    if(this.userService.isLoggedIn())\r\n    this.router.navigateByUrl('/show-profile');\r\n  }\r\n\r\n  onSubmit(form : NgForm){\r\n    this.userService.login(form.value).subscribe(\r\n      res => {\r\n        this.userService.setToken(res['token']);\r\n        // this.userService.selectedUser.status = true;\r\n        this.router.navigateByUrl('/show-profile');\r\n      },\r\n      err => {\r\n        this.serverErrorMessages = err.error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <img src=\\\"/assets/img/user-group.png\\\" id=\\\"icon\\\" alt=\\\"User Icon\\\" />\\r\\n</div>\\r\\n<form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\r\\n\\r\\n  <input type=\\\"text\\\" #fullName=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.fullName\\\" name=\\\"fullName\\\" placeholder=\\\"Full Name\\\"\\r\\n  required  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !fullName.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && !fullName.valid\\\">\\r\\n    <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"text\\\" #age=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.age\\\" name=\\\"age\\\" placeholder=\\\"Age\\\"\\r\\n  required  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !age.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && !fullName.valid\\\">\\r\\n    <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"text\\\" #locality=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.locality\\\" name=\\\"locality\\\" placeholder=\\\"locality\\\"\\r\\n  required  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !locality.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && !locality.valid\\\">\\r\\n    <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"signUpForm.submitted && !interest.valid\\\">\\r\\n    <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"text\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\"\\r\\n  required [pattern]=\\\"emailRegex\\\"  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && email.errors\\\">\\r\\n    <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\r\\n    <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n  minlength=\\\"4\\\" required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && password.errors\\\">\\r\\n    <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\r\\n    <label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Enter atleast 4 characters.</label>\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    Choose min 5 interests from: <br>\\r\\n    <label *ngFor=\\\"let c of interests\\\">\\r\\n      {{c}}, <br>\\r\\n    </label>\\r\\n    <br>Separate by commas ','\\r\\n  </div>\\r\\n\\r\\n  <input type=\\\"text\\\" #interest=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.interest\\\" name=\\\"interest\\\" placeholder=\\\"Interests\\\"\\r\\n         required  [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !interest.valid }\\\">\\r\\n  <div *ngIf=\\\"signUpForm.submitted && !interest.valid\\\">\\r\\n    <label class=\\\"validation-message\\\">This field is required.</label>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <input type=\\\"submit\\\" value=\\\"Sign Up\\\">\\r\\n</form>\\r\\n\\r\\n<!-- Success message -->\\r\\n<div class=\\\"success\\\" *ngIf=\\\"showSucessMessage\\\">\\r\\n  Saved successfully\\r\\n</div>\\r\\n\\r\\n<!-- Error message -->\\r\\n<div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n  {{serverErrorMessages}}\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm,FormArray,FormControl } from '@angular/forms';\r\n\r\nimport { UserService } from '../../shared/user.service'\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  showSucessMessage: boolean;\r\n  serverErrorMessages: string;\r\n  interests = [\r\n    'Reading',\r\n    'Traveling',\r\n    'Fishing',\r\n    'Crafts',\r\n    'Television',\r\n    'Collecting',\r\n    'Music',\r\n    'Bird Watching',\r\n    'Gardening',\r\n    'Video Games'\r\n  ] ;\r\n\r\n  constructor(private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    // form.form.controls.interest.value = form.form.controls.interest.value.split(',');\r\n    console.log(\"formvalue \",form.form.value);\r\n    this.userService.postUser(form.value).subscribe(\r\n      res => {\r\n        this.showSucessMessage = true;\r\n        setTimeout(() => this.showSucessMessage = false, 4000);\r\n        this.resetForm(form);\r\n      },\r\n      err => {\r\n        if (err.status === 422) {\r\n          this.serverErrorMessages = err.error.join('<br/>');\r\n        }\r\n        else\r\n          this.serverErrorMessages = 'Something went wrong.Please contact admin.';\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm(form: NgForm) {\r\n    this.userService.selectedUser = {\r\n      fullName: '',\r\n      age:'',\r\n      locality:'',\r\n      interest:[''],\r\n      email: '',\r\n      password: '',\r\n      status: false\r\n    };\r\n    form.resetForm();\r\n    this.serverErrorMessages = '';\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div id=\\\"formContent\\\">\\r\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/login\\\"  routerLinkActive=\\\"active\\\"> Sign In </h2>\\r\\n    <h2 class=\\\"underlineHover\\\"  routerLink=\\\"/signup\\\"  routerLinkActive=\\\"active\\\">Sign Up </h2>\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}